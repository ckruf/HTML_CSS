/* 
============================
Fonts
============================
*/

/* Importing fonts from Google Font. Note that the Catamaran is customized, one version is for 
normal use and one is for headings. Grand Hotel is also imported. */
@import url("https://fonts.googleapis.com/css?family=Catamaran:400,700|Grand+Hotel");

/* 
============================
Global styles
============================
*/

/* Variables */
:root {
  --clr-primary: #678e3e;
  --clr-primary-light: #beed8c;
  --clr-grey-1: #102a42;
  --clr-grey-5: #617d98;
  --clr-grey-10: #f1f5f8;
  --clr-white: #fff;
  --ff-primary: "Catamaran", "sans-serif";
  --ff-secondary: "Grand Hotel", "cursive";
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--ff-primary);
  background: var(--clr-white);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  display: block;
}
/* Note that these styles for the headings are specifically for small screens. For bigger screens, these styles
are changed using the media query. */
h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2rem;
}

h3 {
  font-size: 1.5rem;
}

h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
}

.btn {
  text-transform: uppercase;
  background: var(--clr-primary);
  color: var(--clr-white);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  /* inline-block added in case we would want to specify margin/width/height (which is otherwise not respected by the browser for inline elements) */
  display: inline-block;
  font-weight: 700;
  transition: var(--transition);
  font-size: 0.875rem;
  border: none;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn:hover {
  color: var(--clr-primary);
  background: var(--clr-primary-light);
}

.clearfix::after,
.clearfix::before {
  content: "";
  clear: both;
  display: table;
}

.section-title h3 {
  font-family: var(--ff-secondary);
  color: var(--clr-primary);
}

.section-title {
  margin-bottom: 2rem;
}

.section-center {
  padding: 3rem 0;
  width: 85vw;
  margin: 0 auto;
  max-width: 1170px;
}

@media screen and (min-width: 768px) {
  .section-center {
    width: 95vw;
    padding: 4rem 1rem;
  }
}

/* 
============================
Media query for headings on big screens
============================
*/

@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }

  h2 {
    font-size: 2.5rem;
  }

  h3 {
    font-size: 2rem;
  }

  h4 {
    font-size: 1rem;
  }

  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }

  body {
    font-size: 1rem;
  }
}

/* 
============================
Animations
============================
*/

/* Navbar button pulsating animation */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes slideFromRight {
  0% {
    transform: translateX(600px);
    opacity: 0.2;
  }
  50% {
    transform: translateX(-200px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(50px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideFromLeft {
  0% {
    transform: translateX(-600px);
    opacity: 0.2;
  }
  50% {
    transform: translateX(200px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(-50px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes show {
  0% {
    transform: scale(1);
    opacity: 0.2;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* 
============================
Navbar
============================
*/

/* button for opening the nav bar */
.nav-btn {
  /* position fixed takes the element out of the normal DOM flow */
  position: fixed;
  top: 5%;
  left: 5%;
  /* increase size of button/icon with font size */
  font-size: 2.5rem;
  color: var(--clr-primary);
  /* need z-index, otherwise our button will not be visible over our background image */
  z-index: 1;
  cursor: pointer;
  animation: pulse 2s ease infinite;
}

.navbar {
  position: fixed;
  top: 0;
  left: 0;
  /* One way of making the element take up the whole screen is to set top, left, bottom and right all to 0 */
  /* right: 0;
  bottom: 0; */
  /* Alternatively, we can just set top and left to 0 and then width and height to 100% */
  height: 100%;
  width: 100%;
  background: var(--clr-grey-10);
  z-index: 2;
  box-shadow: 2px 0 2px rgba(0, 0, 0, 0.2);
  /* This will hide our nav bar to the left  */
  transform: translateX(-100%);
  transition: var(--transition);
}

.showNav {
  transform: translate(0);
}

.navbar-header {
  /* move 'close' button to the right */
  text-align: right;
  padding-right: 1rem;
}

/* button for closing the nav bar */
.nav-close {
  font-size: 2.5rem;
  cursor: pointer;
  color: #f29c9c;
  transition: var(--transition);
}

.nav-close:hover {
  color: #bb2525;
}

.nav-times {
  list-style-type: none;
}

.nav-link {
  /* we want each link to start on a new line, so display-block */
  display: block;
  font-size: 1.5rem;
  padding: 0.25rem 1rem;
  text-transform: uppercase;
  letter-spacing: var(--spacing);
  color: var(--clr-grey-5);
  transition: var(--transition);
}

.nav-link:hover {
  background: var(--clr-primary-light);
  color: var(--clr-primary);
  padding-left: 1.5rem;
  border-left: 0.25rem solid var(--clr-primary);
}

@media screen and (min-width: 576px) {
  .navbar {
    width: 30vw;
    max-width: 20rem;
  }
}

/* 
============================
Header
============================
*/

.header {
  min-height: 100vh;
  /* Below, we are using a shorthand to style our image. The 'center' value is for the background-position property.
  The  'cover' value is for the object-fit property, and it ensures that the image fills the entire content box,
  while maintaining the aspect ratio. The 'fixed' value is for background-attachment (affects scrolling behaviour.
  Also, note that the fixed property will not be supported by most mobile devices. The linear gradient is added
  to add a darker overlay to the image, so it is not so bright. */
  background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)),
    url("../images/main-bcg.jpg") center/cover no-repeat fixed;
  position: relative;
  /* For animation */
  overflow-x: hidden;
}

.banner {
  /* Centers the text horizontally */
  text-align: center;
  /* Added so that our banner is positioned relative to its parent - the header. */
  position: absolute;
  /* This will position the top left corner of the banner in the center of the header. */
  top: 50%;
  left: 50%;
  /* The translate property will ensure that our banner is actually in the center, not just its top left corner.
  Note that the units here -50% mean 50% of the banner, whereas for top and left, it was 50% of the parent element (the header) */
  transform: translate(-50%, -50%);
}

.banner h2 {
  font-family: var(--ff-secondary);
  color: var(--clr-primary);
  animation: slideFromRight 5s ease-in-out 1;
}

.banner h1 {
  /* Note that we did not have to specify properties such as font-size, since they are specified in our global styles */
  color: var(--clr-white);
  text-transform: uppercase;
  margin-top: 1.25rem;
  margin-bottom: 2rem;
  animation: slideFromLeft 5s ease-in-out 1;
}

.banner-btn {
  /* outline is very similar to border, but it supports offset, which border does not */
  outline: 0.125rem solid var(--clr-primary);
  outline-offset: 0.25rem;
  font-size: 1.25rem;
  padding: 1rem 1.75rem;
  animation: show 5s linear 1;
}

.content-divider {
  height: 0.5rem;
  background: linear-gradient(
    to left,
    var(--clr-primary),
    #e9b949,
    var(--clr-primary)
  );
}

/* 
============================
Skills
============================
*/
/* The whole section */
.skills {
  background: var(--clr-grey-10);
}
/* The individual articles */
.skill {
  padding: 2.5rem 0;
  text-align: center;
  transition: var(--transition);
}

.skill:hover {
  background: var(--clr-white);
  box-shadow: 0 2px var(--clr-primary);
}

.skill:hover .skill-icon {
  transform: translateY(-5px);
}

.skill-icon {
  font-size: 2.5rem;
  margin-bottom: 1.25rem;
  transition: var(--transition);
  display: inline-block;
  color: var(--clr-primary);
}

.skill-text {
  color: var(--clr-grey-5);
  max-width: 17rem;
  margin: 0 auto;
}

/* 
============================
Media query for 'Skills' section column layout on big screens
============================
*/

/* Starting at 576px, we would like to switch from 1 column to 2 columns */
@media screen and (min-width: 576px) {
  .skill {
    float: left;
    width: 50%;
  }
}

/* At 1200, we switch to 4 columns */
@media screen and (min-width: 1200px) {
  .skill {
    width: 25%;
  }
}

/* 
============================
About
============================
*/

.about-img,
.about-info {
  padding: 2rem 0;
}

.about-picture-container {
  background: var(--clr-primary);
  border: 0.5rem solid var(--clr-primary);
  max-width: 30rem;
  margin: 0 auto;
  /* The overflow property is needed because of our hover scaling/zooming in effect.
  If we omitted overflow:hidden, then the image would escape/overflow its container. */
  overflow: hidden;
}

.about-picture {
  transition: var(--transition);
}

.about-picture-container:hover .about-picture {
  /* The reason our image gets a green hue on hover is because that's the background of the about-picture-container (as you can see like 13 lines up).
  Combined with the opacity, the background color starts to show on hover  */
  opacity: 0.5;
  transform: scale(1.2);
}

.about-text {
  max-width: 26rem;
  color: var(--clr-grey-5);
}

/* 
============================
Media query for 'About' section
============================
*/

/* Media query to center 'About' info horizontally on bigger screens */

@media screen and (min-width: 576px) {
  .about-info {
    text-align: center;
  }
  .about-info .about-text {
    margin-left: auto;
    margin-right: auto;
    text-align: left;
  }
}

/* Media query for two column layout on bigger screens  */

@media screen and (min-width: 768px) {
  .about-img,
  .about-info {
    float: left;
    width: 50%;
  }
  .about-info {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .about-info .about-text {
    text-align: center;
  }
}

/* 
============================
Products
============================
*/

.products {
  background: var(--clr-grey-10);
}

.products article {
  padding: 2rem 0;
}

.product-text {
  color: var(--clr-grey-5);
  max-width: 26rem;
}

.product {
  margin-bottom: 2rem;
}

.product-img {
  border-radius: var(--radius);
  margin-bottom: 2rem;
  height: 17rem;
  object-fit: cover;
}

.product-price {
  color: var(--clr-primary);
}

/* Starting at 768px, we would like to switch our products to a two
column layout (just the products, not the description above) */
@media screen and (min-width: 768px) {
  .product {
    float: left;
    width: 50%;
    padding-right: 2rem;
  }
}

/* Starting at 992px, we would like to switch our products to a three
column layout */
@media screen and (min-width: 992px) {
  .product {
    width: 33%;
  }
}

/* Starting at 1200px, we would like to switch to a nested column layout,
with one column for our description and three columns for our products */
@media screen and (min-width: 1200px) {
  .products-info {
    float: left;
    width: 30%;
  }
  .products-inventory {
    float: left;
    width: 70%;
  }
  /* Once the products are not stacked on top of each other, but rather
  are next to one another, we don't need top and bottom spacing/margin, but we
  do want some left and right spacing/margin */
  .product {
    margin-bottom: 0;
    padding: 0 1rem;
  }
}

/* 
============================
Services
============================
*/

.services-title {
  margin-top: 4rem;
  margin-bottom: -4rem;
  text-align: center;
}

.service-card {
  margin: 2rem 0;
  background: var(--clr-grey-10);
  border-radius: var(--radius);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
}

.service-card:hover {
  transform: scale(1.02);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.service-img {
  height: 17rem;
  object-fit: cover;
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

.service-info {
  text-align: center;
  padding: 3rem 1rem 2.5rem 1rem;
}

.service-info p {
  max-width: 20rem;
  color: var(--clr-grey-5);
  margin: 0 auto;
}

.service-btn {
  font-size: 0.75rem;
  text-transform: capitalize;
  padding: 0.375rem 0.5rem;
  border-radius: var(--radius);
  font-weight: 400;
  margin-top: 1.25rem;
}

@media screen and (min-width: 768px) {
  .service-card {
    float: left;
    width: 45%;
    margin-right: 5%;
  }
}

@media screen and (min-width: 992px) {
  .service-card {
    width: 30%;
    margin-right: 3.33%;
  }
}

.service-img-container {
  position: relative;
}

.service-icon {
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 50%);
  font-size: 2rem;
  color: var(--clr-primary);
  background: var(--clr-primary-light);
  padding: 0.25rem 0.6rem;
  border-radius: 50%;
  border: 0.375rem solid var(--clr-grey-10);
}

/* 
============================
Contact
============================
*/

/* set background color for whole section */
.contact {
  background: var(--clr-grey-10);
}

/* set top and bottom margin for our two 'columns' for when they are a single column
on smaller screens */
.contact-form,
.contact.info {
  margin: 1rem 0;
}

.contact-item {
  margin-bottom: 1.75rem;
}

.contact-title {
  color: var(--clr-primary);
  font-weight: normal;
}

.contact-text {
  text-transform: uppercase;
}

.contact-form {
  background: var(--clr-white);
  border-radius: var(--radius);
  text-align: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
  max-width: 35rem;
}

.contact-form:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.contact-form h3 {
  padding-top: 1.25rem;
  color: var(--clr-grey-5);
}

.form-group {
  /* This is the padding of the container which holds our text inputs */
  padding: 1rem 1.5rem;
}

.form-control {
  /* display: block given so that inputs each start on a new line */
  display: block;
  /* Even though we have set our width to 100%, the inputs will not span the whole width
  of their container, because we gave them padding (using the form-group selector above),
  and we have a global box-sizing of border-box.  */
  width: 100%;
  /* This is the padding between the text in our inputs and the edge of the input */
  padding: 0.75rem 1rem;
  border: none;
  margin-bottom: 1.25rem;
  background: var(--clr-grey-10);
  border-radius: var(--radius);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

/* For some browsers, the placeholder text in our inputs will not inherit the styles
we gave to the inputs themselves, so it is better to also target it specifically  */
.form-control::placeholder {
  font-family: var(--ff-primary);
  color: var(--clr-grey-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.submit-btn {
  display: block;
  width: 100%;
  padding: 1rem;
  border-bottom-left-radius: var(--radius);
  border-bottom-right-radius: var(--radius);
}

/* Media query for two column layout on bigger screens for Contact section */
@media screen and (min-width: 992px) {
  .contact-info,
  .contact-form {
    float: left;
    width: 50%;
  }
}

/* 
============================
Contact
============================
*/

.footer {
  background: #222;
  text-align: center;
}

.social-icon {
  color: var(--clr-white);
  font-size: 1.5rem;
  margin-right: 1rem;
  transition: var(--transition);
}

.social-icon:hover {
  color: var(--clr-primary);
}

.footer-text {
  margin-top: 1.25rem;
  text-transform: uppercase;
  color: white;
}

.company {
  color: var(--clr-primary);
}
